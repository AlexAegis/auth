{"version":3,"file":"jwt-error-handling.interceptor.js","sourceRoot":"../../../../libs/jwt/src/","sources":["lib/interceptor/jwt-error-handling.interceptor.ts"],"names":[],"mappings":"AAOA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAEzC,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAE,cAAc,EAAE,MAAM,uCAAuC,CAAC;AAKvE,OAAO,EACN,+BAA+B,EAC/B,uCAAuC,EACvC,uBAAuB,EACvB,+BAA+B,GAC/B,MAAM,kCAAkC,CAAC;AAE1C;;;GAGG;AAEH,MAAM,OAAO,2BAA2B;IAGvC,YAEC,SAA2B,EAE3B,gBAAkC,EAGlC,aAAyD,EAGzD,uBAAmE,EACtC,MAAe;QAAf,WAAM,GAAN,MAAM,CAAS;QAE5C,IAAI,CAAC,gBAAgB,mCACjB,gBAAgB,GAChB,SAAS,CACZ,CAAC;QAEF,IAAI,CAAC,uBAAuB;YAC3B,uBAAuB,IAAI,aAAa;gBACvC,CAAC,iCACI,uBAAuB,GACvB,aAAa,EAElB,CAAC,CAAC,SAAS,CAAC;IACf,CAAC;IACM,SAAS,CACf,OAA6B,EAC7B,IAAiB;QAEjB,OAAO,IAAI;aACT,MAAM,CAAC,OAAO,CAAC;aACf,IAAI,CACJ,UAAU,CAAC,CAAC,aAAgC,EAAE,EAAE,CAC/C,cAAc,CACb,aAAa,EACb,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,MAAM,CACX,CACD,CACD,CAAC;IACJ,CAAC;;;YA9CD,UAAU;;;4CAKR,MAAM,SAAC,uBAAuB;4CAE9B,MAAM,SAAC,+BAA+B;4CAEtC,QAAQ,YACR,MAAM,SAAC,+BAA+B;4CAEtC,QAAQ,YACR,MAAM,SAAC,uCAAuC;YAhCxC,MAAM,uBAkCZ,QAAQ","sourcesContent":["import {\n\tHttpErrorResponse,\n\tHttpEvent,\n\tHttpHandler,\n\tHttpInterceptor,\n\tHttpRequest,\n} from '@angular/common/http';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { handleJwtError } from '../function/handle-jwt-error.function';\nimport {\n\tJwtConfiguration,\n\tJwtRefreshConfiguration,\n} from '../model/auth-core-configuration.interface';\nimport {\n\tDEFAULT_JWT_CONFIGURATION_TOKEN,\n\tDEFAULT_JWT_REFRESH_CONFIGURATION_TOKEN,\n\tJWT_CONFIGURATION_TOKEN,\n\tJWT_REFRESH_CONFIGURATION_TOKEN,\n} from '../token/jwt-configuration.token';\n\n/**\n * If configured, handles authentication errors with custom callbacks\n * or redirects\n */\n@Injectable()\nexport class JwtErrorHandlingInterceptor implements HttpInterceptor {\n\tprivate readonly jwtConfiguration: JwtConfiguration;\n\tprivate readonly jwtRefreshConfiguration?: JwtRefreshConfiguration<unknown, unknown>;\n\tpublic constructor(\n\t\t@Inject(JWT_CONFIGURATION_TOKEN)\n\t\tjwtConfig: JwtConfiguration,\n\t\t@Inject(DEFAULT_JWT_CONFIGURATION_TOKEN)\n\t\tdefaultJwtConfig: JwtConfiguration,\n\t\t@Optional()\n\t\t@Inject(JWT_REFRESH_CONFIGURATION_TOKEN)\n\t\trefreshConfig?: JwtRefreshConfiguration<unknown, unknown>,\n\t\t@Optional()\n\t\t@Inject(DEFAULT_JWT_REFRESH_CONFIGURATION_TOKEN)\n\t\tdefaultJwtRefreshConfig?: JwtRefreshConfiguration<unknown, unknown>,\n\t\t@Optional() private readonly router?: Router\n\t) {\n\t\tthis.jwtConfiguration = {\n\t\t\t...defaultJwtConfig,\n\t\t\t...jwtConfig,\n\t\t};\n\n\t\tthis.jwtRefreshConfiguration =\n\t\t\tdefaultJwtRefreshConfig && refreshConfig\n\t\t\t\t? {\n\t\t\t\t\t\t...defaultJwtRefreshConfig,\n\t\t\t\t\t\t...refreshConfig,\n\t\t\t\t  }\n\t\t\t\t: undefined;\n\t}\n\tpublic intercept(\n\t\trequest: HttpRequest<unknown>,\n\t\tnext: HttpHandler\n\t): Observable<HttpEvent<unknown>> {\n\t\treturn next\n\t\t\t.handle(request)\n\t\t\t.pipe(\n\t\t\t\tcatchError((errorResponse: HttpErrorResponse) =>\n\t\t\t\t\thandleJwtError(\n\t\t\t\t\t\terrorResponse,\n\t\t\t\t\t\tthis.jwtConfiguration,\n\t\t\t\t\t\tthis.jwtRefreshConfiguration,\n\t\t\t\t\t\tthis.router\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t}\n}\n"]}