{"version":3,"file":"jwt.module.js","sourceRoot":"","sources":["../../../../../libs/jwt/src/lib/jwt.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAuB,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,2BAA2B,EAAE,MAAM,8CAA8C,CAAC;AAC3F,OAAO,EAAE,sBAAsB,EAAE,MAAM,wCAAwC,CAAC;AAChF,OAAO,EAAE,qBAAqB,EAAE,MAAM,uCAAuC,CAAC;AAC9E,OAAO,EACN,kBAAkB,EAClB,0BAA0B,GAC1B,MAAM,2CAA2C,CAAC;AACnD,OAAO,EAAE,8BAA8B,EAAE,MAAM,wDAAwD,CAAC;AACxG,OAAO,EAAE,qCAAqC,EAAE,MAAM,gEAAgE,CAAC;AACvH,OAAO,EACN,+BAA+B,EAC/B,uCAAuC,GAGvC,MAAM,iCAAiC,CAAC;AAEzC;;;;;;GAMG;AAIH,MAAM,OAAO,SAAS;IA8Bd,MAAM,CAAC,OAAO,CACpB,8BAA8D,EAC9D,+BAGC;QAED,OAAO;YACN,QAAQ,EAAE,SAAS;YACnB,SAAS,EAAE;gBACV;oBACC,OAAO,EAAE,iBAAiB;oBAC1B,QAAQ,EAAE,2BAA2B;oBACrC,KAAK,EAAE,IAAI;iBACX;gBACD;oBACC,OAAO,EAAE,iBAAiB;oBAC1B,QAAQ,EAAE,sBAAsB;oBAChC,KAAK,EAAE,IAAI;iBACX;gBACD;oBACC,OAAO,EAAE,+BAA+B;oBACxC,QAAQ,EAAE,kBAAkB;iBAC5B;gBACD,8BAA8B,CAAC,8BAA8B,CAAC;gBAC9D,GAAG,CAAC,+BAA+B;oBAClC,CAAC,CAAC;wBACA;4BACC,OAAO,EAAE,iBAAiB;4BAC1B,QAAQ,EAAE,qBAAqB;4BAC/B,KAAK,EAAE,IAAI;yBACX;wBACD;4BACC,OAAO,EAAE,uCAAuC;4BAChD,QAAQ,EAAE,0BAA0B;yBACpC;wBACD,qCAAqC,CACpC,+BAA+B,CAC/B;qBACA;oBACH,CAAC,CAAC,EAAE,CAAC;aACN;SACD,CAAC;IACH,CAAC;;;YA5ED,QAAQ,SAAC;gBACT,OAAO,EAAE,CAAC,YAAY,CAAC;aACvB","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { JwtErrorHandlingInterceptor } from './interceptor/jwt-error-handling.interceptor';\nimport { JwtInjectorInterceptor } from './interceptor/jwt-injector.interceptor';\nimport { JwtRefreshInterceptor } from './interceptor/jwt-refresh.interceptor';\nimport {\n\tDEFAULT_JWT_CONFIG,\n\tDEFAULT_JWT_REFRESH_CONFIG,\n} from './model/auth-core-configuration.interface';\nimport { createJwtConfigurationProvider } from './providers/create-jwt-configuration-provider.function';\nimport { createJwtRefreshConfigurationProvider } from './providers/create-jwt-refresh-configuration-provider.function';\nimport {\n\tDEFAULT_JWT_CONFIGURATION_TOKEN,\n\tDEFAULT_JWT_REFRESH_CONFIGURATION_TOKEN,\n\tJwtModuleConfigurationProvider,\n\tJwtModuleRefreshConfigurationProvider,\n} from './token/jwt-configuration.token';\n\n/**\n * This module needs to be configured to use. See the\n * {@link JwtModule#forRoot | forRoot} method for more information.\n *\n * tokens. So that other, plug in configration modules can provide them.\n * Like Ngrx and Local. They then transform their configs into this common one.\n */\n@NgModule({\n\timports: [CommonModule],\n})\nexport class JwtModule {\n\t/**\n\t * To define the interceptors and the token with the provided config.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * (a)NgModule({\n\t *\t\timports: [\n\t *\t\t\tJwtModule.forRoot<Foo>({\n\t *\t\t\t\t\tuseFactory: (foo) => foo.getConf(),\n\t *\t\t\t\t\tdeps: [Foo] // if something has to be injected\n\t *\t\t\t})\n\t *\t\t]\n\t *\t})\n\t *\texport class CoreModule {}\n\t * ```\n\t * @param tokenProvider create with `createAuthTokenProvider` or\n\t * \t`createRefreshableAuthTokenProvider`\n\t */\n\tpublic static forRoot(\n\t\tjwtModuleConfigurationProvider: JwtModuleConfigurationProvider\n\t): ModuleWithProviders<JwtModule>;\n\tpublic static forRoot<RefreshRequest, RefreshResponse>(\n\t\tjwtModuleConfigurationProvider: JwtModuleConfigurationProvider,\n\t\tjwtRefreshConfigurationProvider: JwtModuleRefreshConfigurationProvider<\n\t\t\tRefreshRequest,\n\t\t\tRefreshResponse\n\t\t>\n\t): ModuleWithProviders<JwtModule>;\n\tpublic static forRoot<RefreshRequest, RefreshResponse>(\n\t\tjwtModuleConfigurationProvider: JwtModuleConfigurationProvider,\n\t\tjwtRefreshConfigurationProvider?: JwtModuleRefreshConfigurationProvider<\n\t\t\tRefreshRequest,\n\t\t\tRefreshResponse\n\t\t>\n\t): ModuleWithProviders<JwtModule> {\n\t\treturn {\n\t\t\tngModule: JwtModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\t\t\tuseClass: JwtErrorHandlingInterceptor,\n\t\t\t\t\tmulti: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\t\t\tuseClass: JwtInjectorInterceptor,\n\t\t\t\t\tmulti: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: DEFAULT_JWT_CONFIGURATION_TOKEN,\n\t\t\t\t\tuseValue: DEFAULT_JWT_CONFIG,\n\t\t\t\t},\n\t\t\t\tcreateJwtConfigurationProvider(jwtModuleConfigurationProvider),\n\t\t\t\t...(jwtRefreshConfigurationProvider\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\t\t\t\t\t\tuseClass: JwtRefreshInterceptor,\n\t\t\t\t\t\t\t\tmulti: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprovide: DEFAULT_JWT_REFRESH_CONFIGURATION_TOKEN,\n\t\t\t\t\t\t\t\tuseValue: DEFAULT_JWT_REFRESH_CONFIG,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreateJwtRefreshConfigurationProvider<RefreshRequest, RefreshResponse>(\n\t\t\t\t\t\t\t\tjwtRefreshConfigurationProvider\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  ]\n\t\t\t\t\t: []),\n\t\t\t],\n\t\t};\n\t}\n}\n"]}