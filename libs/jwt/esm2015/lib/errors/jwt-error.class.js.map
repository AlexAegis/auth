{"version":3,"file":"jwt-error.class.js","sourceRoot":"","sources":["../../../../../../libs/jwt/src/lib/errors/jwt-error.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAe,MAAM,sBAAsB,CAAC;AAEtE,MAAM,OAAO,QAAS,SAAQ,KAAK;IAGlC,YACiB,eAAiD,EACjD,aAAsB,EACtC,OAAO,GAAG,QAAQ,CAAC,IAAI;QAEvB,KAAK,CAAC,OAAO,CAAC,CAAC;QAJC,oBAAe,GAAf,eAAe,CAAkC;QACjD,kBAAa,GAAb,aAAa,CAAS;IAIvC,CAAC;IAED,MAAM,CAAC,mBAAmB,CACzB,OAAyC,EACzC,YAAqB;QAErB,OAAO,IAAI,iBAAiB,CAAC;YAC5B,KAAK,EAAE,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC;SACvD,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,gBAAgB,CACtB,OAAyC,EACzC,YAAqB;QAErB,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpC,KAAK,EAAE,IAAI,QAAQ,CAAC,OAAO,EAAE,YAAY,CAAC;SAC1C,CAAC,CAAC;IACJ,CAAC;;AA1BM,aAAI,GAAG,WAAW,CAAC;AA6B3B;;GAEG;AACH,MAAM,OAAO,qBAAsB,SAAQ,QAAQ;IAGlD,YACiB,eAAiD,EACjD,aAAsB;QAEtC,KAAK,CAAC,eAAe,EAAE,aAAa,EAAE,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAHlD,oBAAe,GAAf,eAAe,CAAkC;QACjD,kBAAa,GAAb,aAAa,CAAS;IAGvC,CAAC;IAED,MAAM,CAAC,mBAAmB,CACzB,OAAyC,EACzC,YAAqB;QAErB,OAAO,IAAI,iBAAiB,CAAC;YAC5B,KAAK,EAAE,qBAAqB,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC;SACpE,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,gBAAgB,CACtB,OAAyC,EACzC,YAAqB;QAErB,OAAO,IAAI,UAAU,CAAC,qBAAqB,CAAC,IAAI,EAAE;YACjD,KAAK,EAAE,IAAI,qBAAqB,CAAC,OAAO,EAAE,YAAY,CAAC;SACvD,CAAC,CAAC;IACJ,CAAC;;AAzBM,0BAAI,GAAG,0BAA0B,CAAC;AA4B1C;;GAEG;AACH,MAAM,OAAO,sBAAuB,SAAQ,QAAQ;IAGnD,YACiB,eAAiD,EACjD,aAAsB;QAEtC,KAAK,CAAC,eAAe,EAAE,aAAa,EAAE,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAHnD,oBAAe,GAAf,eAAe,CAAkC;QACjD,kBAAa,GAAb,aAAa,CAAS;IAGvC,CAAC;IAED,MAAM,CAAC,mBAAmB,CACzB,OAAyC,EACzC,YAAqB;QAErB,OAAO,IAAI,iBAAiB,CAAC;YAC5B,KAAK,EAAE,sBAAsB,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC;SACrE,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,gBAAgB,CACtB,OAAyC,EACzC,YAAqB;QAErB,OAAO,IAAI,UAAU,CAAC,sBAAsB,CAAC,IAAI,EAAE;YAClD,KAAK,EAAE,IAAI,sBAAsB,CAAC,OAAO,EAAE,YAAY,CAAC;SACxD,CAAC,CAAC;IACJ,CAAC;;AAzBM,2BAAI,GAAG,2BAA2B,CAAC","sourcesContent":["import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\n\nexport class JwtError extends Error {\n\tstatic type = 'JWT_ERROR';\n\n\tpublic constructor(\n\t\tpublic readonly originalRequest: HttpRequest<unknown> | undefined,\n\t\tpublic readonly originalError: unknown,\n\t\tmessage = JwtError.type\n\t) {\n\t\tsuper(message);\n\t}\n\n\tstatic createErrorResponse(\n\t\trequest: HttpRequest<unknown> | undefined,\n\t\trefreshError: unknown\n\t): HttpErrorResponse {\n\t\treturn new HttpErrorResponse({\n\t\t\terror: JwtError.createErrorEvent(request, refreshError),\n\t\t});\n\t}\n\n\tstatic createErrorEvent(\n\t\trequest: HttpRequest<unknown> | undefined,\n\t\trefreshError: unknown\n\t): ErrorEvent {\n\t\treturn new ErrorEvent(JwtError.type, {\n\t\t\terror: new JwtError(request, refreshError),\n\t\t});\n\t}\n}\n\n/**\n * When both access and refresh tokens are either invalid or expired!\n */\nexport class JwtCannotRefreshError extends JwtError {\n\tstatic type = 'JWT_CANNOT_REFRESH_ERROR';\n\n\tpublic constructor(\n\t\tpublic readonly originalRequest: HttpRequest<unknown> | undefined,\n\t\tpublic readonly originalError: unknown\n\t) {\n\t\tsuper(originalRequest, originalError, JwtCannotRefreshError.type);\n\t}\n\n\tstatic createErrorResponse(\n\t\trequest: HttpRequest<unknown> | undefined,\n\t\trefreshError: unknown\n\t): HttpErrorResponse {\n\t\treturn new HttpErrorResponse({\n\t\t\terror: JwtCannotRefreshError.createErrorEvent(request, refreshError),\n\t\t});\n\t}\n\n\tstatic createErrorEvent(\n\t\trequest: HttpRequest<unknown> | undefined,\n\t\trefreshError: unknown\n\t): ErrorEvent {\n\t\treturn new ErrorEvent(JwtCannotRefreshError.type, {\n\t\t\terror: new JwtCannotRefreshError(request, refreshError),\n\t\t});\n\t}\n}\n\n/**\n * When refresh failed\n */\nexport class JwtCouldntRefreshError extends JwtError {\n\tstatic type = 'JWT_COULDNT_REFRESH_ERROR';\n\n\tpublic constructor(\n\t\tpublic readonly originalRequest: HttpRequest<unknown> | undefined,\n\t\tpublic readonly originalError: unknown\n\t) {\n\t\tsuper(originalRequest, originalError, JwtCouldntRefreshError.type);\n\t}\n\n\tstatic createErrorResponse(\n\t\trequest: HttpRequest<unknown> | undefined,\n\t\trefreshError: unknown\n\t): HttpErrorResponse {\n\t\treturn new HttpErrorResponse({\n\t\t\terror: JwtCouldntRefreshError.createErrorEvent(request, refreshError),\n\t\t});\n\t}\n\n\tstatic createErrorEvent(\n\t\trequest: HttpRequest<unknown> | undefined,\n\t\trefreshError: unknown\n\t): ErrorEvent {\n\t\treturn new ErrorEvent(JwtCouldntRefreshError.type, {\n\t\t\terror: new JwtCouldntRefreshError(request, refreshError),\n\t\t});\n\t}\n}\n"]}