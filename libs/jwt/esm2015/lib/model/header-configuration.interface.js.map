{"version":3,"file":"header-configuration.interface.js","sourceRoot":"","sources":["../../../../../../libs/jwt/src/lib/model/header-configuration.interface.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAc,MAAM,MAAM,CAAC;AAEnD,MAAM,CAAC,MAAM,qBAAqB,GAAiC;IAClE,QAAQ,EAAE,IAAI,eAAe,CAA4B,IAAI,CAAC;CAC9D,CAAC","sourcesContent":["import { BehaviorSubject, Observable } from 'rxjs';\n\nexport const DEFAULT_HEADER_CONFIG: Partial<HeaderConfiguration> = {\n\tgetValue: new BehaviorSubject<string | null | undefined>(null),\n};\n\nexport interface NormalizedHeaderConfiguration extends HeaderConfiguration {\n\tvalue$: Observable<string | null | undefined>;\n}\n\n/**\n * Token injection configuration\n *\n * The optional generic defined the refresh endpoints Response type. If you\n * are not using that feature there's no need to define it.\n *\n * Example configuration:\n * ```typescript\n * AuthCoreModule.forRoot<TokenStorageService>({\n *\t\tuseFactory: (service: TokenStorageService) => ({\n *\t\t\tgetToken: service.accessToken$\n *\t\t\tautoRefresher: {\n * \t\t\t\tendpoint: `${environment.api}/auth/refresh`,\n * \t\t\t\tsetToken: (response) => service.accessToken$.next(response.accessToken)\n * \t\t\t}\n *\t\t}),\n *\t\tdeps: [TokenStorageService],\n * })\n * ```\n */\nexport interface HeaderConfiguration extends UrlFilter {\n\t/**\n\t * A callback or observable that will be called or subscribed to\n\t * on every http request and returns a value for the header\n\t *\n\t * @example getValue: () => localstorage.get('foo')\n\t * @example getValue: myTokenService.foo$\n\t */\n\tgetValue:\n\t\t| Observable<string | null | undefined>\n\t\t| (() =>\n\t\t\t\t| string\n\t\t\t\t| null\n\t\t\t\t| undefined\n\t\t\t\t| Promise<string | null | undefined>\n\t\t\t\t| Observable<string | null | undefined>);\n\n\t/**\n\t * Header name to be set\n\t */\n\theader: string;\n}\n\nexport interface UrlFilter {\n\t/**\n\t * These domains won't recieve this header even if they are listed in the\n\t * whitelist.\n\t *\n\t * If `null` or `undefined`, this category of rules won't take any effect.\n\t * If empty, it would mean \"No domains are blacklisted\", and it won't\n\t * take any effect.\n\t *\n\t * @default undefined\n\t * @example ['localhost:3333']\n\t * @example [/localhost:[0-9]{4}/]\n\t */\n\tdomainBlacklist?: (string | RegExp)[];\n\n\t/**\n\t * Only domains listed will be recieving header injections\n\t *\n\t * If `null` or `undefined`, this category of rules won't take any effect.\n\t * If empty, it would mean \"No domains are whitelisted\", so no paths would\n\t * recieve tokens!\n\t *\n\t * @default undefined\n\t * @example ['localhost:3333']\n\t * @example [/localhost:[0-9]{4}/]\n\t */\n\tdomainWhitelist?: (string | RegExp)[];\n\n\t/**\n\t * These paths won't recieve this header even if they are listed in the\n\t * whitelist.\n\t *\n\t * If `null` or `undefined`, this category of rules won't take any effect.\n\t * If empty, it would mean \"No paths are blacklisted\", and it won't\n\t * take any effect.\n\t *\n\t * @default undefined\n\t * @example ['api/v2/users/1']\n\t * @example [/users\\/.+/]\n\t */\n\tpathBlacklist?: (string | RegExp)[];\n\n\t/**\n\t * Only paths listed will be recieving this header injection.\n\t *\n\t * If `null` or `undefined`, this category of rules won't take any effect.\n\t * If empty, it would mean \"No paths are whitelisted\", so no paths would\n\t * recieve tokens!\n\t *\n\t * @default undefined\n\t * @example ['api/v2/users/1']\n\t * @example [/users\\/.+/]\n\t */\n\tpathWhitelist?: (string | RegExp)[];\n\n\t/**\n\t * These protocols won't recieve this header even if they are listed in\n\t * the whitelist.\n\t *\n\t * If `null` or `undefined`, this category of rules won't take any effect.\n\t * If empty, it would mean \"No protocols are blacklisted\", and it won't\n\t * take any effect.\n\t *\n\t * @default undefined\n\t * @example ['http']\n\t * @example [/https?/]\n\t */\n\tprotocolBlacklist?: (string | RegExp)[];\n\n\t/**\n\t * Only protocols listed will be recieving this header injections.\n\t *\n\t * If empty or undefined, this category of rules won't take any effect.\n\t * If empty, it would mean \"No protocols are whitelisted\", so no protocols\n\t * would recieve tokens!\n\t *\n\t * @default undefined\n\t * @example ['http']\n\t * @example [/https?/]\n\t */\n\tprotocolWhitelist?: (string | RegExp)[];\n}\n"]}