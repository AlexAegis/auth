{"version":3,"file":"try-jwt-refresh.function.js","sourceRoot":"","sources":["../../../../../../libs/jwt/src/lib/function/try-jwt-refresh.function.ts"],"names":[],"mappings":"AACA,OAAO,EAA+B,UAAU,EAAE,MAAM,MAAM,CAAC;AAC/D,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AAKjD,OAAO,EAAE,2BAA2B,EAAE,MAAM,4CAA4C,CAAC;AACzF,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAE5D,MAAM,CAAC,MAAM,aAAa,GAAG,CAC5B,IAAiB,EACjB,aAAyC,EACzC,uBAA0D,EAC1D,WAAqC,EACrC,OAAmD,EACnD,cAAwE,EACtD,EAAE;IACpB,MAAM,gBAAgB,GACrB,OAAO,aAAa,KAAK,QAAQ;QACjC,2BAA2B,CAAC,uBAAuB,EAAE,aAAa,CAAC,CAAC;IAErE,IAAI,gBAAgB,EAAE;QACrB,OAAO,cAAc,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAC3E,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE;YACzB,IAAI,WAAW,EAAE;gBAChB,OAAO,YAAY,CAClB,IAAI,EACJ,WAAW,EACX,uBAAuB,EACvB,WAAW,EACX,OAAO,EACP,cAAc,CACd,CAAC;aACF;iBAAM;gBACN,OAAO,OAAO,CAAC,aAAa,CAAC,CAAC;aAC9B;QACF,CAAC,CAAC,CACF,CAAC;KACF;SAAM;QACN,OAAO,UAAU,CAAC,aAAa,CAAC,CAAC;KACjC;AACF,CAAC,CAAC","sourcesContent":["import { HttpErrorResponse, HttpHandler } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport {\n\tJwtRefreshConfiguration,\n\tJwtRefreshResponse,\n} from '../model/auth-core-configuration.interface';\nimport { checkAgainstHttpErrorFilter } from './check-against-http-error-filter.function';\nimport { doJwtRefresh } from './do-jwt-refresh.function';\nimport { intoObservable } from './into-observable.function';\n\nexport const tryJwtRefresh = <Req, Res, Ret>(\n\tnext: HttpHandler,\n\toriginalError: string | HttpErrorResponse,\n\tjwtRefreshConfiguration: JwtRefreshConfiguration<Req, Res>,\n\trefreshLock: BehaviorSubject<boolean>,\n\tonError: (refreshError: unknown) => Observable<Ret>,\n\toriginalAction: (refreshResponse: JwtRefreshResponse) => Observable<Ret>\n): Observable<Ret> => {\n\tconst isRefreshAllowed =\n\t\ttypeof originalError === 'string' ||\n\t\tcheckAgainstHttpErrorFilter(jwtRefreshConfiguration, originalError);\n\n\tif (isRefreshAllowed) {\n\t\treturn intoObservable(jwtRefreshConfiguration.createRefreshRequestBody).pipe(\n\t\t\ttake(1),\n\t\t\tswitchMap((requestBody) => {\n\t\t\t\tif (requestBody) {\n\t\t\t\t\treturn doJwtRefresh(\n\t\t\t\t\t\tnext,\n\t\t\t\t\t\trequestBody,\n\t\t\t\t\t\tjwtRefreshConfiguration,\n\t\t\t\t\t\trefreshLock,\n\t\t\t\t\t\tonError,\n\t\t\t\t\t\toriginalAction\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn onError(originalError);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t} else {\n\t\treturn throwError(originalError);\n\t}\n};\n"]}