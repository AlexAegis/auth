{"version":3,"file":"promise.predicate.js","sourceRoot":"/home/runner/work/auth/auth/libs/jwt/src/","sources":["lib/function/promise.predicate.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,MAAM,UAAU,SAAS,CAAI,WAAoB;IAChD,OAAO,CACN,WAAW;QACX,OAAQ,WAA0B,CAAC,IAAI,KAAK,UAAU;QACtD,OAAQ,WAA0B,CAAC,KAAK,KAAK,UAAU,CACvD,CAAC;AACH,CAAC","sourcesContent":["/**\n * Returns true if the object is truthy and has a `then` and a `catch` function.\n * Using `instanceof` would not be sufficient as Promises can be contructed\n * in many ways, and it's just a specification.\n */\nexport function isPromise<T>(promiseLike: unknown): promiseLike is Promise<T> {\n\treturn (\n\t\tpromiseLike &&\n\t\ttypeof (promiseLike as Promise<T>).then === 'function' &&\n\t\ttypeof (promiseLike as Promise<T>).catch === 'function'\n\t);\n}\n"]}