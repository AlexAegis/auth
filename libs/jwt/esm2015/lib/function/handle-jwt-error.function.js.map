{"version":3,"file":"handle-jwt-error.function.js","sourceRoot":"/home/runner/work/auth/auth/libs/jwt/src/","sources":["lib/function/handle-jwt-error.function.ts"],"names":[],"mappings":"AAEA,OAAO,EAAc,UAAU,EAAE,MAAM,MAAM,CAAC;AAC9C,OAAO,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AACpG,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAK1D,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AAEjE,MAAM,UAAU,cAAc,CAC7B,YAMmF,EACnF,gBAAkC,EAClC,uBAAkF,EAClF,MAAe;;IAEf,MAAM,KAAK,SACV,YAAY,CAAC,KAAK,0CAAE,KAAK,CAAC;IAE3B,IAAI,KAAK,YAAY,qBAAqB,IAAI,KAAK,YAAY,sBAAsB,EAAE;QACtF,IAAI,uBAAuB,IAAI,YAAY,CAAC,uBAAuB,CAAC,SAAS,CAAC,EAAE;YAC/E,gBAAgB,CACf,uBAAuB,CAAC,SAAS,EACjC,KAAK,EACL,MAAM,EACN,uBAAuB,CAAC,2BAA2B,CACnD,CAAC;SACF;QACD,+DAA+D;QAC/D,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;KACzB;SAAM,IAAI,KAAK,YAAY,QAAQ,EAAE;QACrC,IAAI,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE;YAC7C,gBAAgB,CACf,gBAAgB,CAAC,SAAS,EAC1B,KAAK,EACL,MAAM,EACN,gBAAgB,CAAC,2BAA2B,CAC5C,CAAC;SACF;QACD,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;KACzB;SAAM;QACN,kCAAkC;QAClC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC;KAChC;AACF,CAAC","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { JwtCannotRefreshError, JwtCouldntRefreshError, JwtError } from '../errors/jwt-error.class';\nimport { isNotNullish } from './is-not-nullish.predicate';\nimport {\n\tJwtConfiguration,\n\tJwtRefreshConfiguration,\n} from '../model/auth-core-configuration.interface';\nimport { handleJwtFailure } from './handle-jwt-failure.function';\n\nexport function handleJwtError<RefreshRequest = unknown, RefreshResponse = unknown>(\n\twrappedError:\n\t\t| (Omit<HttpErrorResponse, 'error'> & {\n\t\t\t\terror?: Omit<ErrorEvent, 'error'> & {\n\t\t\t\t\terror: JwtError | JwtCannotRefreshError | JwtCouldntRefreshError;\n\t\t\t\t};\n\t\t  })\n\t\t| { error?: { error: JwtError | JwtCannotRefreshError | JwtCouldntRefreshError } },\n\tjwtConfiguration: JwtConfiguration,\n\tjwtRefreshConfiguration?: JwtRefreshConfiguration<RefreshRequest, RefreshResponse>,\n\trouter?: Router\n): Observable<never> {\n\tconst error: undefined | JwtError | JwtCannotRefreshError | JwtCouldntRefreshError =\n\t\twrappedError.error?.error;\n\n\tif (error instanceof JwtCannotRefreshError || error instanceof JwtCouldntRefreshError) {\n\t\tif (jwtRefreshConfiguration && isNotNullish(jwtRefreshConfiguration.onFailure)) {\n\t\t\thandleJwtFailure(\n\t\t\t\tjwtRefreshConfiguration.onFailure,\n\t\t\t\terror,\n\t\t\t\trouter,\n\t\t\t\tjwtRefreshConfiguration.onFailureRedirectParameters\n\t\t\t);\n\t\t}\n\t\t// Rethrow the inner error, so observers of the user can see it\n\t\treturn throwError(error);\n\t} else if (error instanceof JwtError) {\n\t\tif (isNotNullish(jwtConfiguration.onFailure)) {\n\t\t\thandleJwtFailure(\n\t\t\t\tjwtConfiguration.onFailure,\n\t\t\t\terror,\n\t\t\t\trouter,\n\t\t\t\tjwtConfiguration.onFailureRedirectParameters\n\t\t\t);\n\t\t}\n\t\treturn throwError(error);\n\t} else {\n\t\t// Other errors are left untreated\n\t\treturn throwError(wrappedError);\n\t}\n}\n"]}