{"version":3,"file":"base64-decoder.function.js","sourceRoot":"../../../../libs/jwt/src/","sources":["lib/function/base64-decoder.function.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAKnC;;;GAGG;AACH,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAA8B,GAAiB,EAAY,EAAE;IAChG,IAAI;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;KACtC;IAAC,OAAO,KAAK,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC;KACZ;AACF,CAAC,CAAC","sourcesContent":["import { Base64 } from 'js-base64';\n\nexport type Base64String = string;\nexport type JsonString = string;\n\n/**\n *\n * @param str json encoded in Base64\n */\nexport const decodeJsonLikeBase64 = <T = Record<string, unknown>>(str: Base64String): T | null => {\n\ttry {\n\t\treturn JSON.parse(Base64.decode(str));\n\t} catch (error) {\n\t\tconsole.error('Invalid Jsonlike Base64 string', error);\n\t\treturn null;\n\t}\n};\n"]}