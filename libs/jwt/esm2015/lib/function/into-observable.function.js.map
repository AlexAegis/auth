{"version":3,"file":"into-observable.function.js","sourceRoot":"/home/runner/work/auth/auth/libs/jwt/src/","sources":["lib/function/into-observable.function.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,YAAY,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAEhD;;;GAGG;AACH,MAAM,UAAU,cAAc,CAC7B,QAAiF;IAEjF,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE;QAC3B,OAAO,QAAQ,CAAC;KAChB;SAAM,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;QAChC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CACnB,SAAS,CAAC,GAAG,EAAE;YACd,MAAM,MAAM,GAAG,QAAQ,EAAE,CAAC;YAC1B,IAAI,YAAY,CAAC,MAAM,CAAC;gBAAE,OAAO,MAAM,CAAC;YACxC,IAAI,SAAS,CAAC,MAAM,CAAC;gBAAE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;;gBACtC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC,CAAC,CACF,CAAC;KACF;SAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB;SAAM;QACN,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;KACpB;AACF,CAAC","sourcesContent":["import { from, isObservable, Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { isFunction } from './function.predicate';\nimport { isPromise } from './promise.predicate';\n\n/**\n * Returns a cold observable from a function, or returns an observable if\n * one is directly passed to it\n */\nexport function intoObservable<T>(\n\tgetValue: T | Observable<T> | Promise<T> | (() => T | Promise<T> | Observable<T>)\n): Observable<T> {\n\tif (isObservable(getValue)) {\n\t\treturn getValue;\n\t} else if (isFunction(getValue)) {\n\t\treturn of(null).pipe(\n\t\t\tswitchMap(() => {\n\t\t\t\tconst result = getValue();\n\t\t\t\tif (isObservable(result)) return result;\n\t\t\t\tif (isPromise(result)) return from(result);\n\t\t\t\telse return of(result);\n\t\t\t})\n\t\t);\n\t} else if (isPromise(getValue)) {\n\t\treturn from(getValue);\n\t} else {\n\t\treturn of(getValue);\n\t}\n}\n"]}