import { merge, of, timer } from 'rxjs';
import { mapTo } from 'rxjs/operators';
/**
 * It returns an observable which emits instantly a boolean describing if the
 * timestamp is expired or not. If not, it will emit a second time when it
 * will expire.
 *
 * @param timestamp milliseconds
 */
export const isTimestampExpiredNowAndWhenItIs = (timestamp) => {
    // If already expired, just return that
    if (timestamp - new Date().getTime() < 0) {
        return of(true);
    }
    else {
        // If not, return that is not and a timer that will emit when it does
        return merge(of(false), timer(new Date(timestamp)).pipe(mapTo(true)));
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtdGltZXN0YW1wLWV4cGlyZWQtbm93LWFuZC13aGVuLWl0LWlzLmZ1bmN0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9qd3Qvc3JjL2xpYi9mdW5jdGlvbi9pcy10aW1lc3RhbXAtZXhwaXJlZC1ub3ctYW5kLXdoZW4taXQtaXMuZnVuY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBYyxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV2Qzs7Ozs7O0dBTUc7QUFDSCxNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBRyxDQUFDLFNBQWlCLEVBQXVCLEVBQUU7SUFDMUYsdUNBQXVDO0lBQ3ZDLElBQUksU0FBUyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDMUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakIsQ0FBQztTQUFNLENBQUM7UUFDUCxxRUFBcUU7UUFDckUsT0FBTyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7QUFDRixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZXJnZSwgT2JzZXJ2YWJsZSwgb2YsIHRpbWVyIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXBUbyB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuLyoqXG4gKiBJdCByZXR1cm5zIGFuIG9ic2VydmFibGUgd2hpY2ggZW1pdHMgaW5zdGFudGx5IGEgYm9vbGVhbiBkZXNjcmliaW5nIGlmIHRoZVxuICogdGltZXN0YW1wIGlzIGV4cGlyZWQgb3Igbm90LiBJZiBub3QsIGl0IHdpbGwgZW1pdCBhIHNlY29uZCB0aW1lIHdoZW4gaXRcbiAqIHdpbGwgZXhwaXJlLlxuICpcbiAqIEBwYXJhbSB0aW1lc3RhbXAgbWlsbGlzZWNvbmRzXG4gKi9cbmV4cG9ydCBjb25zdCBpc1RpbWVzdGFtcEV4cGlyZWROb3dBbmRXaGVuSXRJcyA9ICh0aW1lc3RhbXA6IG51bWJlcik6IE9ic2VydmFibGU8Ym9vbGVhbj4gPT4ge1xuXHQvLyBJZiBhbHJlYWR5IGV4cGlyZWQsIGp1c3QgcmV0dXJuIHRoYXRcblx0aWYgKHRpbWVzdGFtcCAtIG5ldyBEYXRlKCkuZ2V0VGltZSgpIDwgMCkge1xuXHRcdHJldHVybiBvZih0cnVlKTtcblx0fSBlbHNlIHtcblx0XHQvLyBJZiBub3QsIHJldHVybiB0aGF0IGlzIG5vdCBhbmQgYSB0aW1lciB0aGF0IHdpbGwgZW1pdCB3aGVuIGl0IGRvZXNcblx0XHRyZXR1cm4gbWVyZ2Uob2YoZmFsc2UpLCB0aW1lcihuZXcgRGF0ZSh0aW1lc3RhbXApKS5waXBlKG1hcFRvKHRydWUpKSk7XG5cdH1cbn07XG4iXX0=