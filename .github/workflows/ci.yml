name: CI

on:
  push:
    branches: [master, staging]
  pull_request:
    branches: [master, staging]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Cache
        id: cache-packages
        uses: actions/cache@v1.2.0
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: yarn install
      - name: Lint packages
        run: yarn lint
      - name: Lint using eslint
        run: yarn run lint:es
      - name: Lint scss stylesheets
        run: yarn run lint:scss
      - name: Lint css stylesheets
        run: yarn run lint:css
      - name: Lint markdown
        run: yarn run lint:md
      - name: Lint format
        run: yarn run lint:format
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Cache
        id: cache-packages
        uses: actions/cache@v1.2.0
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: yarn install
      - run: yarn test
      - name: Upload coverage result to codacy
        run: |
          export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -Ls https://coverage.codacy.com/get.sh)
